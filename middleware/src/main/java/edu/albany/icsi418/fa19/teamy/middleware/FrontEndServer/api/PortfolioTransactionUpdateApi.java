/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package edu.albany.icsi418.fa19.teamy.middleware.FrontEndServer.api;

import org.threeten.bp.OffsetDateTime;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-11-20T03:09:25.605Z[GMT]")
@Api(value = "portfolioTransaction_update", description = "the portfolioTransaction_update API")
public interface PortfolioTransactionUpdateApi {

    @ApiOperation(value = "", nickname = "portfolioTransactionUpdatePost", notes = "Update the asset quatntity in a porfolio transaction/date the asset has been purchased or sold", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully updated the transaction"),
        @ApiResponse(code = 404, message = "Record not found in the system"),
        @ApiResponse(code = 500, message = "An error occurred processing this request") })
    @RequestMapping(value = "/portfolioTransaction_update",
        method = RequestMethod.POST)
    ResponseEntity<Void> portfolioTransactionUpdatePost(@NotNull @ApiParam(value = "The transaction to be updated", required = true) @Valid @RequestParam(value = "transactionId", required = true) Long transactionId, @ApiParam(value = "the new quantity of the asset") @Valid @RequestParam(value = "assetQuantity", required = false) Double assetQuantity, @ApiParam(value = "the new date on which the asset has been sold or purchased") @Valid @RequestParam(value = "newDate", required = false) OffsetDateTime newDate, @ApiParam(value = "the new price of the asset") @Valid @RequestParam(value = "assetPrice", required = false) Double assetPrice);

}
