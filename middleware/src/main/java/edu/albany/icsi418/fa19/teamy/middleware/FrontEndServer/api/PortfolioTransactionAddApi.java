/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package edu.albany.icsi418.fa19.teamy.middleware.FrontEndServer.api;

import edu.albany.icsi418.fa19.teamy.middleware.FrontEndServer.model.PortfolioTransactionItem;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-11-20T03:09:25.605Z[GMT]")
@Api(value = "portfolioTransaction_add", description = "the portfolioTransaction_add API")
public interface PortfolioTransactionAddApi {

    @ApiOperation(value = "", nickname = "portfolioTransactionAddPost", notes = "Make a new transaction for the portfolio", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Transaction is successful"),
        @ApiResponse(code = 500, message = "An error occurred processing this request") })
    @RequestMapping(value = "/portfolioTransaction_add",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> portfolioTransactionAddPost(@ApiParam(value = "Filled out porttfolio transaction item", required = true) @Valid @RequestBody PortfolioTransactionItem body);

}
