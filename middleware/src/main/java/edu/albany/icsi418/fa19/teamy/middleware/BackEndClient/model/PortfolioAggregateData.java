/*
 * BackEndApi
 * This api is connects the middleware and backend of a portfolio management web application
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package edu.albany.icsi418.fa19.teamy.middleware.BackEndClient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import edu.albany.icsi418.fa19.teamy.middleware.BackEndClient.model.PortfolioTotalValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * The aggregate value of a portfolio from start to end date
 */
@Schema(description = "The aggregate value of a portfolio from start to end date")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-12-03T01:43:24.217Z[GMT]")
public class PortfolioAggregateData {
  @SerializedName("portfolioId")
  private Long portfolioId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("startDate")
  private OffsetDateTime startDate = null;

  @SerializedName("endDate")
  private OffsetDateTime endDate = null;

  @SerializedName("portfolioValueByDate")
  private List<PortfolioTotalValue> portfolioValueByDate = null;

  public PortfolioAggregateData portfolioId(Long portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Unique Database Primary Key
   * @return portfolioId
  **/
  @Schema(example = "1", description = "Unique Database Primary Key")
  public Long getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(Long portfolioId) {
    this.portfolioId = portfolioId;
  }

  public PortfolioAggregateData name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "Portfolio A", description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PortfolioAggregateData startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @Schema(example = "1996-12-19T16:39:57-08:00", description = "")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public PortfolioAggregateData endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @Schema(example = "1996-12-19T16:39:57-08:00", description = "")
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }

  public PortfolioAggregateData portfolioValueByDate(List<PortfolioTotalValue> portfolioValueByDate) {
    this.portfolioValueByDate = portfolioValueByDate;
    return this;
  }

  public PortfolioAggregateData addPortfolioValueByDateItem(PortfolioTotalValue portfolioValueByDateItem) {
    if (this.portfolioValueByDate == null) {
      this.portfolioValueByDate = new ArrayList<PortfolioTotalValue>();
    }
    this.portfolioValueByDate.add(portfolioValueByDateItem);
    return this;
  }

   /**
   * The array consists of the total portfolio value on each date from start to end
   * @return portfolioValueByDate
  **/
  @Schema(description = "The array consists of the total portfolio value on each date from start to end")
  public List<PortfolioTotalValue> getPortfolioValueByDate() {
    return portfolioValueByDate;
  }

  public void setPortfolioValueByDate(List<PortfolioTotalValue> portfolioValueByDate) {
    this.portfolioValueByDate = portfolioValueByDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortfolioAggregateData portfolioAggregateData = (PortfolioAggregateData) o;
    return Objects.equals(this.portfolioId, portfolioAggregateData.portfolioId) &&
        Objects.equals(this.name, portfolioAggregateData.name) &&
        Objects.equals(this.startDate, portfolioAggregateData.startDate) &&
        Objects.equals(this.endDate, portfolioAggregateData.endDate) &&
        Objects.equals(this.portfolioValueByDate, portfolioAggregateData.portfolioValueByDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portfolioId, name, startDate, endDate, portfolioValueByDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortfolioAggregateData {\n");
    
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    portfolioValueByDate: ").append(toIndentedString(portfolioValueByDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
