/*
 * BackEndApi
 * This api is connects the middleware and backend of a portfolio management web application
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package edu.albany.icsi418.fa19.teamy.middleware.BackEndClient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import edu.albany.icsi418.fa19.teamy.middleware.BackEndClient.model.PortfolioTransactionType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * The transaction model
 */
@Schema(description = "The transaction model")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-16T01:51:45.397Z[GMT]")
public class PortfolioTransaction {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("portfolioId")
  private Long portfolioId = null;

  @SerializedName("type")
  private PortfolioTransactionType type = null;

  @SerializedName("assetId")
  private Long assetId = null;

  @SerializedName("dateTime")
  private OffsetDateTime dateTime = null;

  @SerializedName("quantity")
  private Double quantity = null;

  @SerializedName("price")
  private Double price = null;

  public PortfolioTransaction id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public PortfolioTransaction portfolioId(Long portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Get portfolioId
   * @return portfolioId
  **/
  @Schema(description = "")
  public Long getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(Long portfolioId) {
    this.portfolioId = portfolioId;
  }

  public PortfolioTransaction type(PortfolioTransactionType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public PortfolioTransactionType getType() {
    return type;
  }

  public void setType(PortfolioTransactionType type) {
    this.type = type;
  }

  public PortfolioTransaction assetId(Long assetId) {
    this.assetId = assetId;
    return this;
  }

   /**
   * Get assetId
   * @return assetId
  **/
  @Schema(example = "12", description = "")
  public Long getAssetId() {
    return assetId;
  }

  public void setAssetId(Long assetId) {
    this.assetId = assetId;
  }

  public PortfolioTransaction dateTime(OffsetDateTime dateTime) {
    this.dateTime = dateTime;
    return this;
  }

   /**
   * Get dateTime
   * @return dateTime
  **/
  @Schema(description = "")
  public OffsetDateTime getDateTime() {
    return dateTime;
  }

  public void setDateTime(OffsetDateTime dateTime) {
    this.dateTime = dateTime;
  }

  public PortfolioTransaction quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @Schema(description = "")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public PortfolioTransaction price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @Schema(description = "")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortfolioTransaction portfolioTransaction = (PortfolioTransaction) o;
    return Objects.equals(this.id, portfolioTransaction.id) &&
        Objects.equals(this.portfolioId, portfolioTransaction.portfolioId) &&
        Objects.equals(this.type, portfolioTransaction.type) &&
        Objects.equals(this.assetId, portfolioTransaction.assetId) &&
        Objects.equals(this.dateTime, portfolioTransaction.dateTime) &&
        Objects.equals(this.quantity, portfolioTransaction.quantity) &&
        Objects.equals(this.price, portfolioTransaction.price);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, portfolioId, type, assetId, dateTime, quantity, price);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortfolioTransaction {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
